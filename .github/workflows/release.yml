name: 'C++ CI/CD'

on:
  push:
    branches: ["main"]

env:
  ARTIFACT_NAME: helloworld
  ASSET_NAME: helloworld

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: ${{ github.event.repository.name }}
            asset_name: ${{ github.event.repository.name }}-Linux.deb
          - os: windows-latest
            artifact_name: ${{ github.event.repository.name }}.exe
            asset_name: ${{ github.event.repository.name }}-Windows.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_GTEST=ON
      - run: cmake --build .
      #- run: cmake --build . --target test
      #- run: cmake --build . --target package
      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    tag_name: v0.0.${{ github.run_number }}
      #    release_name: v0.0.${{ github.run_number }}
      #    draft: false
      #    prerelease: false
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: v0.0.${{ github.run_number }}